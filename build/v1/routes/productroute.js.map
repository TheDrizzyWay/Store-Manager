{"version":3,"sources":["../../../api/v1/routes/productroute.js"],"names":["router","express","Router","checkProductId","param","req","res","next","id","database","query","result","rowCount","status","send","message","error","post","authenticate","adminAuth","productController","createProduct","get","getAllProducts","getProductById","put","updateProduct","delete","deleteProduct"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA,IAAMC,iBAAiBH,OAAOI,KAAP,CAAa,IAAb;AAAA,sFAAmB,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAAuBC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEjBC,mBAASC,KAAT,CAAe,uCAAf,EAAwD,CAACF,EAAD,CAAxD,CAFiB;;AAAA;AAEhCG,kBAFgC;;AAAA,kBAGlCA,OAAOC,QAAP,IAAmB,CAHe;AAAA;AAAA;AAAA;;AAIpCN,gBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,+BAA6BP,EAA7B,oBAAF,EAArB;AAJoC;;AAAA;AAOtCD;AAPsC;AAAA;;AAAA;AAAA;AAAA;AAQ7BQ,mBAR6B,eAQ7BA,OAR6B;;AAStCT,gBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,OAAO,EAAED,SAAS,sCAAX,EAAT,EAArB;;AATsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA,IAAvB;;AAaAf,OAAOiB,IAAP,CAAY,GAAZ,EAAiBC,wBAAjB,EAA+BC,qBAA/B,EAA0CC,4BAAkBC,aAA5D;AACArB,OAAOsB,GAAP,CAAW,GAAX,EAAgBJ,wBAAhB,EAA8BE,4BAAkBG,cAAhD;AACAvB,OAAOsB,GAAP,CAAW,MAAX,EAAmBJ,wBAAnB,EAAiCf,cAAjC,EAAiDiB,4BAAkBI,cAAnE;AACAxB,OAAOyB,GAAP,CAAW,MAAX,EAAmBP,wBAAnB,EAAiCC,qBAAjC,EAA4ChB,cAA5C,EAA4DiB,4BAAkBM,aAA9E;AACA1B,OAAO2B,MAAP,CAAc,MAAd,EAAsBT,wBAAtB,EAAoCC,qBAApC,EAA+ChB,cAA/C,EAA+DiB,4BAAkBQ,aAAjF;;kBAEe5B,M","file":"productroute.js","sourcesContent":["import express from 'express';\r\nimport productController from '../controllers/productcontroller';\r\nimport { adminAuth, authenticate } from '../middleware/middleware';\r\nimport database from '../database';\r\n\r\nconst router = express.Router();\r\n\r\nconst checkProductId = router.param('id', async (req, res, next, id) => {\r\n  try {\r\n    const result = await database.query('SELECT id FROM products WHERE id = $1', [id]);\r\n    if (result.rowCount <= 0) {\r\n      res.status(404).send({ message: `Product with ID \"${id}\" was not found` });\r\n      return;\r\n    }\r\n    next();\r\n  } catch ({ message }) {\r\n    res.status(500).send({ error: { message: 'Database error while getting product' } });\r\n  }\r\n});\r\n\r\nrouter.post('/', authenticate, adminAuth, productController.createProduct);\r\nrouter.get('/', authenticate, productController.getAllProducts);\r\nrouter.get('/:id', authenticate, checkProductId, productController.getProductById);\r\nrouter.put('/:id', authenticate, adminAuth, checkProductId, productController.updateProduct);\r\nrouter.delete('/:id', authenticate, adminAuth, checkProductId, productController.deleteProduct);\r\n\r\nexport default router;\r\n"]}