{"version":3,"sources":["../../../api/v1/controllers/saleordercontroller.js"],"names":["createSaleOrder","req","res","adminRole","length","status","send","errors","message","saleOrder","SaleOrder","body","productForSale","name","productConfirm","allProducts","find","obj","undefined","productQuantitySold","quantitySold","quantity","productPrice","price","total","userEmail","loggedIn","seller","allUsers","email","sellerId","id","allSales","push","findAllSales","findSaleById","saleId","params"],"mappings":"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","file":"saleordercontroller.js","sourcesContent":["import { allSales, SaleOrder } from '../models/saleordermodel';\r\nimport { allProducts } from '../models/productmodel';\r\nimport { allUsers, loggedIn, adminRole } from '../models/usermodel';\r\n\r\nexport default {\r\n  createSaleOrder(req, res) {\r\n    if (adminRole.length > 0) {\r\n      return res.status(403).send({ errors: { message: 'You are not permitted to access this page.' } });\r\n    }\r\n    const saleOrder = new SaleOrder(req.body);\r\n    const productForSale = req.body.name;\r\n    const productConfirm = allProducts.find(obj => obj.name === productForSale);\r\n    if (productConfirm === undefined) {\r\n      return res.status(404).send({ errors: { message: 'Product not found.' } });\r\n    }\r\n    const productQuantitySold = req.body.quantitySold;\r\n    if (productQuantitySold > productConfirm.quantity) {\r\n      return res.status(422).send({ errors: { message: 'We do not have the requested quantity.' } });\r\n    }\r\n    const productPrice = productConfirm.price;\r\n    productConfirm.quantity -= productQuantitySold;\r\n    productConfirm.total = productPrice * productQuantitySold;\r\n    saleOrder.total = productConfirm.total;\r\n    // confirm seller id\r\n    const userEmail = loggedIn[0];\r\n    const seller = allUsers.find(obj => obj.email === userEmail);\r\n    const sellerId = seller.id;\r\n    saleOrder.seller = sellerId;\r\n\r\n    allSales.push(saleOrder);\r\n    res.status(201).send(saleOrder);\r\n  },\r\n\r\n  findAllSales(req, res) {\r\n    res.status(200).send(allSales);\r\n  },\r\n\r\n  findSaleById(req, res) {\r\n    if (adminRole.length > 0) {\r\n      const saleId = req.params.saleId;\r\n      const saleOrder = allSales.find(obj => obj.id === saleId);\r\n      if (saleOrder === undefined) {\r\n        res.status(404).send({ errors: { message: 'Sale record not found.' } });\r\n      }\r\n      res.status(200).send(saleOrder);\r\n    } else {\r\n      const saleId = req.params.saleId;\r\n      // confirm seller id\r\n      const userEmail = loggedIn[0];\r\n      const seller = allUsers.find(obj => obj.email === userEmail);\r\n      const sellerId = seller.id;\r\n      const saleOrder = allSales.find(obj => obj.id === saleId && obj.seller === sellerId);\r\n      if (saleOrder === undefined) {\r\n        res.status(404).send({ errors: { message: 'Sale record not found.' } });\r\n      }\r\n      res.status(200).send(saleOrder);\r\n    }\r\n  },\r\n};\r\n"]}