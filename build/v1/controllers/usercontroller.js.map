{"version":3,"sources":["../../../api/v1/controllers/usercontroller.js"],"names":["createUser","req","res","userEmail","body","email","emailExists","allUsers","find","obj","undefined","status","send","errors","message","user","User","push","loginUser","loggedIn","length","userPassword","password","checkUser","role","adminRole","logoutUser","splice","findAllUsers","findUserById","userId","params","id","updateUser","previousUser","updatedUser","index","findIndex","deleteUser"],"mappings":"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","file":"usercontroller.js","sourcesContent":["import { allUsers, loggedIn, adminRole, User } from '../models/usermodel';\r\n\r\nexport default {\r\n  createUser(req, res) {\r\n    const userEmail = req.body.email;\r\n    const emailExists = allUsers.find(obj => obj.email === userEmail);\r\n    if (emailExists !== undefined) {\r\n      return res.status(401).send({ errors: { message: 'This email address is already taken' } });\r\n    }\r\n    const user = new User(req.body);\r\n    allUsers.push(user);\r\n    return res.status(201).send(user);\r\n  },\r\n\r\n  loginUser(req, res) {\r\n    if (loggedIn.length === 1) {\r\n      return res.status(400).send({ errors: { message: 'You are already logged in.' } });\r\n    }\r\n    const userEmail = req.body.email;\r\n    const userPassword = req.body.password;\r\n    const checkUser = allUsers.find(obj => obj.email === userEmail && obj.password === userPassword);\r\n    if (checkUser === undefined) {\r\n      return res.status(401).send({ errors: { message: 'Invalid email address or password.' } });\r\n    }\r\n    if (checkUser.role === 'admin') {\r\n      adminRole.push(userEmail);\r\n    }\r\n    loggedIn.push(userEmail);\r\n    return res.status(200).send({ message: 'You are logged in' });\r\n  },\r\n\r\n  logoutUser(req, res) {\r\n    loggedIn.splice(0, 1);\r\n    adminRole.splice(0, 1);\r\n    return res.status(200).send({ message: 'You have logged out successfully.' });\r\n  },\r\n\r\n  findAllUsers(req, res) {\r\n    return res.status(200).send(allUsers);\r\n  },\r\n\r\n  findUserById(req, res) {\r\n    const userId = req.params.userId;\r\n    const user = allUsers.find(obj => obj.id === userId);\r\n    if (user === undefined) {\r\n      res.status(404).send({ errors: { message: 'User not found.' } });\r\n    }\r\n    res.status(200).send(user);\r\n  },\r\n\r\n  updateUser(req, res) {\r\n    const userId = req.params.userId;\r\n    const previousUser = allUsers.find(obj => obj.id === userId);\r\n    if (previousUser === undefined) {\r\n      return res.status(404).send({ errors: { message: 'User not found.' } });\r\n    }\r\n    const updatedUser = { ...previousUser, ...req.body };\r\n    const index = allUsers.findIndex(obj => obj.id === previousUser.id);\r\n\r\n    allUsers.splice(index, 1, updatedUser);\r\n    res.status(200).send(updatedUser);\r\n  },\r\n\r\n  deleteUser(req, res) {\r\n    const userId = req.params.userId;\r\n    const index = allUsers.findIndex(obj => obj.id === userId);\r\n    if (index === -1) {\r\n      return res.status(404).send({ errors: { message: 'User not found.' } });\r\n    }\r\n\r\n    allUsers.splice(index, 1);\r\n    res.status(204).send(allUsers);\r\n  },\r\n};\r\n"]}